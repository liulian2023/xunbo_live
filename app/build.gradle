apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {

    signingConfigs {
        release {
            keyAlias 'live'
            keyPassword 'live1111'
            storeFile file('../live.jks')
            storePassword 'live1111'
        }
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.zz.live"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        flavorDimensions "com.zz.live"
        //指定app使用架构(腾讯直播只支持armeabi 、 armeabi-v7a 和 arm64-v8a)
        ndk {
            abiFilters "armeabi", "armeabi-v7a"/*, "arm64-v8a"*/
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
        }
    }

    //配置a品牌打包参数(腾讯直播)
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        doNotStrip "*/armeabi/libYTCommon.so"
        doNotStrip "*/armeabi-v7a/libYTCommon.so"
        doNotStrip "*/x86/libYTCommon.so"
        doNotStrip "*/arm64-v8a/libYTCommon.so"
    }

    //指定java8版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }

    }

    //剔除不需要的美颜资源
    applicationVariants.all { variant ->
        variant.mergeAssetsProvider.configure {
            doLast {
                delete(fileTree(dir: outputDir,
                        includes: ['model/ai_face_processor.bundle',
                                   'model/ai_hand_processor.bundle',
                                   'model/ai_human_processor.bundle',
                                   'graphics/controller.bundle',
                                   'graphics/body_slim.bundle',
                                   'graphics/fuzzytoonfilter.bundle',
                                   'graphics/fxaa.bundle',
                                   'graphics/tongue.bundle',
                                   'graphics/face_makeup.bundle',
                                   'makeup/',
                                   'sticker/']))
            }
        }
    }
    // 多渠道打包
    productFlavors {
        miaomi {
            applicationId "com.zz.live"
            resValue("string", "app_name", "主播管家")
            //彩票视频 彩票相关
            manifestPlaceholders = [
                    UMENG_CHANNEL_VALUE: "miaomi",
            ]
            buildConfigField "String", "API_HOST1", "\"http://172.18.165.16:8183/web/\""//直播本地
            buildConfigField "String", "API_HOST2", "\"http://172.18.165.16:8183/web/ws/\""//cp本地
//            buildConfigField "String", "API_HOST2", "\"http://cpapi01.ykydxh.com/web/ws/\""//cp正式
//            buildConfigField "String", "API_HOST1", "\"https://zhuboapi01.mgyale.com/\""//直播正式
            versionName "1.3.6"
            versionCode 35
        }


/*        shaonian {
            applicationId "com.zz.live"
            resValue("string", "app_name", "主播管家")
            //彩票视频 彩票相关
            manifestPlaceholders = [
                    UMENG_CHANNEL_VALUE: "miaomi",
            ]
            buildConfigField "String", "UM_KRY", "\"606541e318b72d2d2440e6e9\""//友盟统计key
//            buildConfigField "String", "API_HOST1", "\"http://api02.ceshizhan001.com/\""//直播线上
//            buildConfigField "String", "API_HOST1", "\"http://172.18.165.16:9999/\""//直播本地
              buildConfigField "String", "API_HOST1", "\"https://zhuboapi01.mgyale.com/\""//直播正式
//            buildConfigField "String", "API_HOST2", "\"http://api03.ceshizhan001.com/web/ws/\""//cp线上
//            buildConfigField "String", "API_HOST2", "\"http://172.18.165.16:8183/web/ws/\""//cp本地
            buildConfigField "String", "API_HOST2", "\"http://cpapi01.ykydxh.com/web/ws/\""//cp正式
            versionName "1.2.5"
            versionCode 25
        }*/
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation project(path: ':faceunity')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "com.android.support:design:24.1.1"

    implementation 'com.umeng.umsdk:analytics:8.0.0'
    implementation 'com.umeng.umsdk:common:2.0.0'
    //-  - --------------------------------------------- 网络请求+数据解析 -------------------------------------------------------------------------
    implementation project(':rxhttp')
    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["fastJson"]
    //Retrofit
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["converter-gson"]
    implementation rootProject.ext.dependencies["adapter-rxjava2"]

    // ------------------------------------------ 项目基础 ------------------------------------------
    //作用：同RxLifecycle一样，防止内存泄露，无侵入，不需要继承RxActivity / RxFragment。
    implementation rootProject.ext.dependencies["autodispose"]
    implementation 'me.yokeyword:eventbus-activity-scope:1.1.0'
    implementation rootProject.ext.dependencies["eventbus"]
    /*
    沉浸式状态栏
     */
// 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
// fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

//    -----------------------------------------------UI框架 ---------------------------------------
    //加载框
    implementation rootProject.ext.dependencies["kprogresshud"]

    //注解框架
    implementation rootProject.ext.dependencies["butterknife"]
    //butterknife
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    //腾讯直播sdk
    implementation 'com.tencent.liteavsdk:LiteAVSDK_Smart:latest.release'

    //常用动画合集
    implementation 'com.daimajia.easing:library:2.0@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'
    //可自定义tab Indicator宽度的tabLayout(支持tabLayout原有的所有api,基础用法和tablayout一样)
    implementation 'com.androidkun:XTabLayout:1.1.4'

    //glide 图片加载
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    //配合glide实现毛玻璃效果
    implementation 'jp.wasabeef:glide-transformations:+'

    //gif imageView
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.19'
    //上拉加载,下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-24'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-24'

    //banner轮播
    implementation 'com.zhpan.library:bannerview:2.4.3.1'
    //RecycleView 开源库(空视图 多布局 添加头尾 )
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.2'


    //fragmentation  单activity+多fragment 多activity+多fragment()
    implementation rootProject.ext.dependencies["fragmentationx"]
    implementation rootProject.ext.dependencies["fragmentationx-core"]
    implementation rootProject.ext.dependencies["fragmentationx-swipeback"]
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    //融云 lib 基础通讯库
    api 'cn.rongcloud.sdk:im_lib:4.0.3.14'
    //权限管理  easypermissions
    implementation 'pub.devrel:easypermissions:+'

/*    //美颜
    implementation 'com.faceunity:nama:7.2.0'*/

    implementation 'com.github.yyued:SVGAPlayer-Android:2.5.3'
    //垂直跑马灯
    implementation 'com.sunfusheng:MarqueeView:1.4.1'
    //水平跑马灯
    implementation 'com.dalong:marqueeview:1.0.1'

    //列表侧滑
    implementation 'com.github.WangcWj:WeSwipe:1.0.1'


    //二维码
    implementation 'com.google.zxing:core:3.3.0'

    //大图预览
    implementation 'com.ycjiang:ImagePreview:2.3.5'
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //版本更新
    implementation 'com.github.MZCretin:AutoUpdateProject:v2.0.4'
//    implementation 'com.zhy.base:fileprovider:1.0.0'
    //加密推流
    implementation 'com.github.nodemedia:nodemediaclient-android:2.9.5'
    //下滑选择控件(时间  类别选择(城市没有封装json))
    implementation 'com.contrarywind:Android-PickerView:4.1.8'

    //蓝牙玩具
    implementation files('libs\\lovense.aar')

}
repositories {
    mavenCentral()
}
